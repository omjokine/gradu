10.9.:

Ajatus:
Devisen koodaus ei kuulosta hyv채lt채, joku valmis rajapinta l철ydett채v채
--> oauth
--> railsissa omniauth

----> Oauth rajapinta, jonka takana ldap. Login devisell채 kuten facebook/lindedin/openid

https://github.com/plataformatec/devise/wiki/OmniAuth%3A-Overview
http://blog.railsrumble.com/blog/2010/10/08/intridea-omniauth
https://github.com/intridea/omniauth
https://github.com/intridea/omniauth/wiki/LDAP-Authentication



Googlen "cloud directory" projekti:
https://sites.google.com/site/clouddir/

- T채m채 summaa koko tutkimusasettelun?

T채st채 eteenp채in:
https://sites.google.com/site/clouddir/references


Kaupallinen projekti:
http://www.readwriteweb.com/cloud/2011/08/okta-has-new-cloud-active-dire.php

Parempi:
http://www.simplecloud.info/
http://code.google.com/p/scim/

---------------------------------------------------------------------------------------------------------

24.9:

https://github.com/omjokine/oauth-plugin
https://github.com/omjokine/rack-oauth2-server
- l철ytyy my철s activerecord-versio, mutta mongo on varmaan ok? (https://github.com/trumant/rack-oauth2-server-active-record)
https://github.com/flowtown/rack-oauth2-server/issues/22

Kumpaako t채ss채 t채ytyisi k채ytt채채? rack-oauth2-server?

Plan:
- LDAP esille gradussa, mutta toteutus j채채 puuttumaan. LDAP mukaan ajatuksena, ett채 v채lipalikka voisi
putkittaa autentikoinnin suoraan LDAP-serveriin. L채hinn채 t채rke채채 osoittaa, ett채 ajatus toimii, ei koodata
valmista palikkaa (vaikka teht채v채nanto saattaa jotain muuta sanoa, mutta sen voi uusia).

Pit채isk철 alkaa tekoprosessi kirjoittamalla oauthista? Pit채isk철 tehd채 koko gradu pelk채st채채n siit채?

Sis채llysluettelo:
1. johdanto
2. ongelmakentt채
2.1. miks on perseest채, ett채 on n clientia jotka autentikoi esim ldapiin
2.2. nelikentt채
3. teknisi채 termej채
3.1. oauth
3.1.1. oauth versio 2
3.2. ldap
3.3. ruby on rails?
4. toteutus
5. toteutuksen validointi ja johtop채채t철kset
6. yhteenveto


-----------------------oOOooOOooOooOOOoOO-------------------------------------------------------------

10.10.

http://blog.joshsoftware.com/2010/12/16/multiple-applications-with-devise-omniauth-and-single-sign-on/

- valmis toteutus, tee t채n pohjalta oma

----------------------------------------

31.1.

2. lukuun rest mukaan??? -> arkkitehtuuriharkka
  - helpottais saml vs oauth perustelua?

loppugradu: ???
5. k채ytt채j채nhallinta
  -> mit채 sit kun tulee login-formiin
  - vaihtoehdot: ldap, tietokanta
6. prototyyppi
  esim articles ja toinen rails-projekti. k채ytt채v채t "samaa
  k채ytt채j채tietokantaa" ja pilkotaan tietokanta omaksi
  projektiksi ja rails-projektit k채ytt채m채채n sit채. ei
  tarvita v채ltt채m채tt채 edes toista projektia, motivaatioksi
  riitt채채 ett채 nyt sen toisen vois sitten tehd채
7. prototyypin puutteet ja parannusehdotukset
  - kertakirjautuminen 
    * tuleeko t채m채 ilmaiseksi, jolloin teoria 2 lukuun?
  - web-palveluiden v채linen resurssien p채채synvalvonta. 
    esim. artikkeli-tietokanta haluaa p채채st채 k채siksi
    pdf-tietokantaan tms, pit채채 hahmotella joku j채rkev채
8. johtop채채t철kset ja yhteenveto

-> tulisi suht teoriapainotteinen (-> mit채 v채li채???)
-> 5. kappale pois, suoraan prototyyppiin? 홶akko olla?


-------

9.2.2012:
maili moenille:

Hei,

En ole t채ss채 viikon aikana kirjoittanut, mutta py철ritellyt tutkimuskysymyst채 p채채ss채ni. Olen v채h채n miettinyt, jos ottaisi l채ht철kohdaksi yliopiston tai laitoksen j채rjestelm채t. Eli mit채 etuja yliopiston laajuisesta identiteetintarjoajasta (keskitetty k채ytt채j채nhallinta) voisi olla. Yksi ongelma nykyisess채 tekstiss채 on se, ett채 siin채 puhutaan t채ll채 hetkell채 keskitetyst채 k채ytt채j채nhallinnasta, vaikka tutkimuksen kannalta oleellisempi termi on identiteentintarjoaja.

K채ytt채j채nhallinta ei oikeastaan ole ollenkaan merkityksellinen, se olisi toteutettu niinkuin nytkin, mutta idea on rakentaa sovelluksen ja AD:n/LDAP:n v채liin erillinen palikka, josta sovellus saa k채ytt채j채n identiteetin k채ytt철철ns채. Tuo yliopisto/TKTL-rajaus voisi olla hyv채 sen kannalta, ett채 olisi selke채 case, jonka ongelmat ratkaistaan, eik채 paisu liian abstraktiksi ("organisaatiot").

Eli tutkimuskysymys voisi olla ytimekk채채sti "miksi yliopiston kannattaa toteuttaa erillinen identiteetinhallinta?", johon siis vastataan SOA-arkkitehtuurien, integraatiopisteiden v채hentymisen yms kautta. Ydinajatuksena varmaankin se, ett채 sovellusohjelmoijan ei tarvitse integroitua suoraan AD/LDAP-j채rjestelmiin, vaan v채lipalvelu tekee sen ja tarjoaa ulosp채in OAuth tai SAML-rajapinnan.

- Olli

